{"version":3,"sources":["data.js","Detail.js","Cart.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","TabContent","useEffect","스위치변경","tab","Info","stock","connect","state","reducer","alertOpen","reducer2","useState","Alert","ChangeAlert","useParams","history","useHistory","selectshoes","shoes","find","product","ChangeTab","스위치","delAlert","setTimeout","clearTimeout","className","src","width","onClick","ChangeStock","dispatch","type","payload","name","quan","push","Nav","variant","defaultActiveKey","Item","Link","eventKey","CSSTransition","in","classNames","timeout","Table","responsive","map","a","i","StockContext","React","createContext","Cards","useContext","App","shoelist","shoes변경","Navbar","collapseOnSelect","expand","bg","Container","Brand","href","Toggle","aria-controls","Collapse","as","to","NavDropdown","Divider","exact","path","Jumbotron","Button","value","Provider","axios","get","then","result","data","console","log","catch","Path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","기본state","store","createStore","combineReducers","액션","found","findIndex","copy","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83cdb01e.chunk.js","sourcesContent":[" export default [\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] \r\n","import React, {useEffect, useState} from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\nimport { Navbar,Container,Nav,NavDropdown,Jumbotron,Button, Card } from 'react-bootstrap';\r\n\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport './Detail.scss'\r\nimport { connect } from 'react-redux';\r\n\r\nlet 박스 = styled.div`\r\n    padding: 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n    font-size: 25px;\r\n    color: ${ props => props.색상 }\r\n`;  \r\n \r\n\r\nfunction Detail(props) {\r\n \r\n    let [Alert,ChangeAlert] = useState(true) \r\n    let [inputData,ChangeInputdata] = useState('')\r\n    let { id } = useParams()\r\n    let history = useHistory();\r\n    let selectshoes = props.shoes.find(function(product){\r\n        return product.id == id\r\n    })\r\n    let [tab, ChangeTab] = useState(0)\r\n    let [스위치, 스위치변경] = useState(false)\r\n    \r\n    useEffect(()=>{\r\n        let delAlert = setTimeout(()=>{\r\n            ChangeAlert( false )\r\n        }, 2000) \r\n        return ()=>{ clearTimeout(delAlert) }\r\n    },[]);\r\n \r\n    return (\r\n        <div className=\"container\">\r\n            <박스>\r\n                <제목>상세페이지</제목>\r\n            </박스>\r\n            \r\n            {\r\n                Alert === true\r\n                ? (<div className=\"my-alert2\">\r\n                    <p>재고가 얼마 남지 않았습니다.</p>\r\n                  </div>)\r\n                : null \r\n            }\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                <img src=\"https://codingapple1.github.io/shop/shoes3.jpg\" width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{selectshoes.title}</h4>\r\n                <p>{selectshoes.content}</p>\r\n                <p>{selectshoes.price}원</p>\r\n                <Info stock={props.stock}/>\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    props.ChangeStock([9,11,12])\r\n                    props.dispatch({type:'항목추가', \r\n                    payload: {id:selectshoes.id, name:selectshoes.title, quan:1}})\r\n                    history.push('/cart')\r\n                }}>주문하기</button>\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    history.push('/');\r\n                }}>취소</button> \r\n            </div>\r\n            </div>\r\n\r\n            <Nav className=\"mt5\" variant=\"tabs\" defaultActiveKey=\"link-0\">\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"link-0\" onClick={()=>{\r\n                    스위치변경(false); ChangeTab(0)\r\n                }}>상품설명</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"link-1\" onClick={()=>{\r\n                    스위치변경(false); ChangeTab(1)\r\n                }}>배송정보</Nav.Link>\r\n                \r\n            </Nav.Item>\r\n            </Nav>\r\n\r\n\r\n            <CSSTransition in={스위치} classNames=\"wow\" timeout={500} >\r\n            <TabContent tab={tab} 스위치변경={스위치변경} />\r\n            </CSSTransition>\r\n\r\n        </div> \r\n    )\r\n}\r\n\r\nfunction TabContent(props) {\r\n\r\n    useEffect(()=>{\r\n        props.스위치변경(true)\r\n    })\r\n\r\n    if (props.tab === 0) {\r\n        return <div>0번째 내용입니다.</div>\r\n    } else if (props.tab === 1) {\r\n        return <div>1번째 내용입니다.</div>\r\n    } else if (props.tab === 2) {\r\n        return <div>2번째 내용입니다.</div>\r\n    }\r\n}\r\n\r\n\r\nfunction Info(props) {\r\n    return (\r\n        <p>재고: {props.stock[0]}</p>\r\n    )\r\n}\r\n\r\n\r\nfunction 함수명(state) {\r\n    return {\r\n        state : state.reducer,\r\n        alertOpen : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(함수명)(Detail)\r\n","import React from 'react';\r\nimport {Table} from 'react-bootstrap'\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nfunction Cart(props) {\r\n    return (\r\n        <div>\r\n            <Table responsive=\"sm\">\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        props.state.map((a,i)=> {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{a.id}</td>\r\n                                    <td>{a.name}</td>\r\n                                    <td>{a.quan}</td>\r\n                                    <td>\r\n                                    <button onClick={()=>{props.dispatch( {type :'수량증가', payload : a.id} )}}>+</button>\r\n                                    <button onClick={()=>{props.dispatch( {type :'수량감소', payload : a.id} )}}>-</button>\r\n                                    </td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            { \r\n            props.alertOpen === true\r\n            ? (<div className=\"my-alert2\">\r\n                <p>지금 구매하시면 신규할인 20%</p>\r\n                <button onClick={()=>{props.dispatch( {type :'alert닫기'} )}}>닫기</button>\r\n                </div>)  \r\n            : null\r\n                \r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction 함수명(state) {\r\n    return {\r\n        state : state.reducer,\r\n        alertOpen : state.reducer2\r\n    }\r\n}\r\n\r\nexport default connect(함수명)(Cart)","/* eslint-disable */\n\nimport React, {useState, useContext} from 'react';\nimport { Navbar,Container,Nav,NavDropdown,Jumbotron,Button, Card } from 'react-bootstrap';\nimport './App.css';\nimport shoelist from './data';\nimport Detail from './Detail';\nimport './Detail.scss';\nimport axios from 'axios';\nimport Cart from './Cart';\n\nimport { Link, Route, Switch, useHistory } from 'react-router-dom'\n\nlet StockContext = React.createContext();  // 범위 지정\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(shoelist)\n  let history = useHistory()\n  let [loding,ChangeLoding] = useState(false)\n  let [stock,ChangeStock] = useState([10,11,12]);\n\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link as={Link} to=\"/\">Home</Nav.Link>\n              <Nav.Link as={Link} to=\"/detail/0\">Detail</Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav>\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\n            <Nav.Link eventKey={2} as={Link} to=\"/Cart\">\n              Cart\n            </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      \n      <Switch>\n      <Route exact path=\"/\">\n        <Jumbotron className=\"background\">\n          <h1>20% season Off</h1>\n          <p>\n          This is a simple hero unit, a simple jumbotron-style component for calling\n          extra attention to featured content or information.\n          </p>\n          <p>\n        <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </Jumbotron>\n\n        <div className=\"container\" value={stock}>\n        \n          <StockContext.Provider value={stock}>\n\n          <div className=\"row\">\n            {\n              shoes.map((a,i)=>{\n                return <Cards shoes={shoes[i]} i={i} key={i} />\n              })\n            }\n          </div>\n        \n          </StockContext.Provider>\n\n          <button className=\"btn btn-primary\" onClick={()=>{\n\n            \n\n            axios.get('https://codingapple1.github.io/shop/data2.json')\n            .then((result)=>{\n              \n            {\n              loding === true\n              ? (<p>로딩중입니다..</p>)\n              : null\n            }\n              ()=>{\n                ChangeLoding(true)\n              }\n              shoes변경([...shoes, ...result.data])\n              console.log(result.data)\n            })\n            .catch(()=>{\n              ()=>{\n                ChangeLoding(false)\n              }\n              console.log(\"실패\")\n            })\n\n          }}>더보기 +</button>\n        </div>\n      </Route>\n      \n      <Route path=\"/detail/:id\">\n            <Detail shoes={shoes} stock={stock} ChangeStock={ChangeStock} />\n      </Route>\n\n      <Route Path=\"/Cart\">\n          <Cart />\n      </Route>      \n\n\n\n\n      <Route path=\"/:id\">\n          <div>ERROR (해당페이지는 없는 페이지 입니다.)</div>\n      </Route>\n    </Switch>        \n      \n      \n      \n      \n      </div>\n  )\n}\n\n\nfunction Cards(props){\n\n  let stock = useContext(StockContext);\n  let history = useHistory();\n\n  return (\n    <div className=\"col-md-4\" onClick={()=>{ history.push('/detail/'+ props.shoes.id)}}>\n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i+1) +'.jpg'} width=\"100%\" />\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } & { props.shoes.price }</p>\n      재고 :{stock[props.i]}\n    </div>\n  )\n}\n\nexport default App;\n\n\n\n\n// axios.get('https://codingapple1.github.io/shop/data2.json')\n//       .then((result)=>{ console.log(result.data) })\n//       .catch(()=>{ 요청실패시실행할코드 })","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { combineReducers, createStore } from 'redux';\n\nlet 기본state = []\n\nlet alert초기값 = true;\n\nfunction reducer2(state = alert초기값, 액션) {\n  if (액션.type==='alert닫기'){\n    \n    state = false;\n    return state;\n  } else {\n  return state\n}\n}\n\nfunction reducer(state = 기본state, 액션){\nif( 액션.type === '항목추가'){\n\n  let found = state.findIndex((a)=>{ return a.id === 액션.payload.id })\n\n  if (found >= 0 ){\n    let copy = [...state]\n    copy[found].quan++\n    return copy\n  } else {\n    let copy = [...state]\n    copy.push(액션.payload);\n    return copy\n  }\n  \n} else if ( 액션.type === '수량증가'){\n    let copy = [...state]\n    copy[액션.payload].quan++;\n    return copy\n\n  } else if (액션.type === '수량감소'){\n    let copy = [...state]\n    copy[액션.payload].quan--;\n    return copy\n\n  } else {\n    return state\n  }\n}\n\nlet store = createStore(combineReducers({reducer,reducer2}));\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}