{"version":3,"sources":["data.js","Detail.js","App.js","reportWebVitals.js","index.js"],"names":["id","title","content","price","박스","styled","div","제목","h4","props","색상","Detail","useParams","history","useHistory","selectshoes","shoes","find","product","className","src","width","onClick","push","Cards","i","App","useState","shoelist","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","to","NavDropdown","Item","Divider","eventKey","exact","path","Jumbotron","Button","map","a","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f54155af.chunk.js","sourcesContent":[" export default [\r\n    {\r\n      id : 0,\r\n      title : \"White and Black\",\r\n      content : \"Born in France\",\r\n      price : 120000\r\n    },\r\n  \r\n    {\r\n      id : 1,\r\n      title : \"Red Knit\",\r\n      content : \"Born in Seoul\",\r\n      price : 110000\r\n    },\r\n  \r\n    {\r\n      id : 2,\r\n      title : \"Grey Yordan\",\r\n      content : \"Born in the States\",\r\n      price : 130000\r\n    }\r\n  ] \r\n","import React, {useState} from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport styled from 'styled-components'\r\n\r\nlet 박스 = styled.div`\r\n    padding: 20px;\r\n`;\r\nlet 제목 = styled.h4`\r\n    font-size: 25px;\r\n    color: ${ props => props.색상 }\r\n`; \r\n\r\nfunction Detail(props) {\r\n \r\n    let { id } = useParams()\r\n    let history = useHistory();\r\n    let selectshoes = props.shoes.find(function(product){\r\n        return product.id == id\r\n    })\r\n \r\n    return (\r\n        <div className=\"container\">\r\n            <박스>\r\n                <제목 색상='black' >상세페이지</제목>\r\n            </박스>\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                <img src=\"https://codingapple1.github.io/shop/shoes1.jpg\" width=\"100%\" />\r\n            </div>\r\n            <div className=\"col-md-6 mt-4\">\r\n                <h4 className=\"pt-5\">{selectshoes.title}</h4>\r\n                <p>{selectshoes.content}</p>\r\n                <p>{selectshoes.price}원</p>\r\n                <button className=\"btn btn-danger\">주문하기</button>\r\n                <button className=\"btn btn-danger\" onClick={()=>{\r\n                    history.push('/');\r\n                }}>취소</button> \r\n            </div>\r\n            </div>\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default Detail;","/* eslint-disable */\n\nimport React, {useState} from 'react';\nimport { Navbar,Container,Nav,NavDropdown,Jumbotron,Button, Card } from 'react-bootstrap';\nimport './App.css';\nimport shoelist from './data';\nimport Detail from './Detail';\n\nimport { Link, Route, Switch, useHistory } from 'react-router-dom'\n\n\nfunction App() {\n\n  let [shoes, shoes변경] = useState(shoelist)\n  let history = useHistory()\n\n  return (\n    <div className=\"App\">\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">ShoeShop</Navbar.Brand>\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"me-auto\">\n              <Nav.Link> <Link to=\"/\">Home</Link></Nav.Link>\n              <Nav.Link> <Link to=\"/detail\">Detail</Link></Nav.Link>\n              <NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\n                <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.2\">Another action</NavDropdown.Item>\n                <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\n                <NavDropdown.Divider />\n                <NavDropdown.Item href=\"#action/3.4\">Separated link</NavDropdown.Item>\n              </NavDropdown>\n            </Nav>\n            <Nav>\n            <Nav.Link href=\"#deets\">More deets</Nav.Link>\n            <Nav.Link eventKey={2} href=\"#memes\">\n              Dank memes\n            </Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      \n      <Switch>\n      <Route exact path=\"/\">\n        <Jumbotron className=\"background\">\n          <h1>20% season Off</h1>\n          <p>\n          This is a simple hero unit, a simple jumbotron-style component for calling\n          extra attention to featured content or information.\n          </p>\n          <p>\n        <Button variant=\"primary\">Learn more</Button>\n          </p>\n        </Jumbotron>\n\n        <div className=\"container\">\n          <div className=\"row\">\n            {\n              shoes.map((a,i)=>{\n                return <Cards shoes={shoes[i]} i={i} key={i} />\n              })\n            }\n          </div>\n        </div>\n      </Route>\n      \n      <Route path=\"/detail/:id\">\n            <Detail shoes={shoes}/>\n      </Route>\n\n      <Route path=\"/:id\">\n          <div>ERROR (해당페이지는 없는 페이지 입니다.)</div>\n      </Route>\n    </Switch>        \n      \n      \n      \n      \n      </div>\n  )\n}\n\n\nfunction Cards(props){\n  return (\n    <div className=\"col-md-4\">\n      <img src={'https://codingapple1.github.io/shop/shoes' + (props.i+1) +'.jpg'} width=\"100%\" />\n      <h4>{ props.shoes.title }</h4>\n      <p>{ props.shoes.content } & { props.shoes.price }</p>\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}